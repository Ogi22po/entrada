CREATE EXTERNAL TABLE IF NOT EXISTS DATABASE.icmp_queries (
  `unixtime` bigint,
  `time` bigint,
  `icmp_type` smallint,
  `icmp_code` smallint,
  `icmp_echo_client_type` smallint,
  `ip_ttl` smallint,
  `ip_v` tinyint,
  `ip_src` string,
  `ip_dst` string,
  `ip_country` string,
  `ip_asn` string,
  `ip_len` int,
  `l4_prot` int,
  `l4_srcp` int,
  `l4_dstp` int,
  `orig_ip_ttl` smallint,
  `orig_ip_v` smallint,
  `orig_ip_src` string,
  `orig_ip_dst` string,
  `orig_l4_prot` int,
  `orig_l4_srcp` int,
  `orig_l4_dstp` int,
  `orig_udp_sum` int,
  `orig_ip_len` int,
  `orig_icmp_type` smallint,
  `orig_icmp_code` smallint,
  `orig_icmp_echo_client_type` smallint,
  `orig_dns_id` int,
  `orig_dns_qname` string,
  `orig_dns_domainname` string,
  `orig_dns_len` int,
  `orig_dns_aa` boolean,
  `orig_dns_tc` boolean,
  `orig_dns_rd` boolean,
  `orig_dns_ra` boolean,
  `orig_dns_z` boolean,
  `orig_dns_ad` boolean,
  `orig_dns_cd` boolean,
  `orig_dns_ancount` int,
  `orig_dns_arcount` int,
  `orig_dns_nscount` int,
  `orig_dns_qdcount` int,
  `orig_dns_rcode` int,
  `orig_dns_qtype` int,
  `orig_dns_opcode` int,
  `orig_dns_qclass` int,
  `orig_dns_edns_udp` int,
  `orig_dns_edns_version` smallint,
  `orig_dns_edns_do` boolean,
  `orig_dns_labels` int,
  `svr` string,
  `time_micro` bigint,
  `server_location` string,
  `pcap_file` string
) PARTITIONED BY (
  year smallint,
  month smallint,
  day smallint
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
WITH SERDEPROPERTIES (
  'serialization.format' = '1'
) LOCATION 's3://BUCKET/icmpqueries/'
TBLPROPERTIES ('has_encrypted_data'='false');
